import * as t from "io-ts";

export enum GridLayoutPosition {
  TOP_LEFT = "TOP_LEFT",
  TOP_CENTER = "TOP_CENTER",
  TOP_RIGHT = "TOP_RIGHT",
  MIDDLE_LEFT = "MIDDLE_LEFT",
  MIDDLE_CENTER = "MIDDLE_CENTER",
  MIDDLE_RIGHT = "MIDDLE_RIGHT",
  BOTTOM_LEFT = "BOTTOM_LEFT",
  BOTTOM_CENTER = "BOTTOM_CENTER",
  BOTTOM_RIGHT = "BOTTOM_RIGHT",
}

export const GridLayoutPositionV = t.keyof({
  [GridLayoutPosition.TOP_LEFT]: null,
  [GridLayoutPosition.TOP_CENTER]: null,
  [GridLayoutPosition.TOP_RIGHT]: null,
  [GridLayoutPosition.MIDDLE_LEFT]: null,
  [GridLayoutPosition.MIDDLE_CENTER]: null,
  [GridLayoutPosition.MIDDLE_RIGHT]: null,
  [GridLayoutPosition.BOTTOM_LEFT]: null,
  [GridLayoutPosition.BOTTOM_CENTER]: null,
  [GridLayoutPosition.BOTTOM_RIGHT]: null,
});

export enum AnimationType {
  bounceOut = "bounceOut",
  bounce = "bounce",
  bounceIn = "bounceIn",
  bounceInDown = "bounceInDown",
  bounceInLeft = "bounceInLeft",
  bounceInright = "bounceInRight",
  bounceInUp = "bounceInUp",
  bounceOutDown = "bounceOutDown",
  bounceOutLeft = "bounceOutLeft",
  bounceOutRight = "bounceOutRight",
  bounceOutUp = "bounceOutUp",
  fadeIn = "fadeIn",
  fadeInDown = "fadeInDown",
  fadeInDownBig = "fadeInDownBig",
  fadeInLeft = "fadeInLeft",
  fadeInLeftBig = "fadeInLeftBig",
  fadeInRight = "fadeInRight",
  fadeInRightBig = "fadeInRightBig",
  fadeInUp = "fadeInUp",
  fadeInUpBig = "fadeInUpBig",
  fadeOut = "fadeOut",
  fadeOutDown = "fadeOutDown",
  fadeOutDownBig = "fadeOutDownBig",
  fadeOutLeft = "fadeOutLeft",
  fadeOutLeftBig = "fadeOutLeftBig",
  fadeOutRight = "fadeOutRight",
  fadeOutRightBig = "fadeOutRightBig",
  fadeOutUp = "fadeOutUp",
  fadeOutUpBig = "fadeOutUpBig",
  flash = "flash",
  flip = "flip",
  flipInX = "flipInX",
  flipInY = "flipInY",
  flipOutX = "flipOutX",
  flipOutY = "flipOutY",
  headShake = "headShake",
  hinge = "hinge",
  jello = "jello",
  lightSpeedIn = "lightSpeedIn",
  lightSpeedOut = "lightSpeedOut",
  pulse = "pulse",
  rollIn = "rollIn",
  rollOut = "rollOut",
  rotateIn = "rotateIn",
  rotateInDownLeft = "rotateInDownLeft",
  rotateInDownRight = "rotateInDownRight",
  rotateInUpLeft = "rotateInUpLeft",
  rotateInUpRight = "rotateInUpRight",
  rotateOut = "rotateOut",
  roateOutDownLeft = "rotateOutDownLeft",
  rotateOutDownRight = "rotateOutDownRight",
  rotateOutUpLeft = "rotateOutUpLeft",
  rotateOutUpRight = "rotateOutUpRight",
  rubberBand = "rubberBand",
  shake = "shake",
  slideInDown = "slideInDown",
  slideInLeft = "slideInLeft",
  slideInRight = "slideInRight",
  slideInUp = "slideInUp",
  slideOutDown = "slideOutDown",
  slideOutLeft = "slideOutLeft",
  slideOutRight = "slideOutRight",
  slideOutUp = "slideOutUp",
  swing = "swing",
  tada = "tada",
  wobble = "wobble",
  zoomIn = "zoomIn",
  zoomInDown = "zoomInDown",
  zoomInLeft = "zoomInLeft",
  zoomInRight = "zoomInRight",
  zoomInUp = "zoomInUp",
  zoomOut = "zoomOut",
  zoomOutDown = "zoomOutDown",
  zoomOutLeft = "zoomOutLeft",
  zoomOutRight = "zoomOutRight",
  zoomOutUp = "zoomOutUp",
}

export const AnimationTypeV = t.keyof({
  [AnimationType.bounce]: null,
  [AnimationType.bounceIn]: null,
  [AnimationType.bounceOut]: null,
  [AnimationType.bounce]: null,
  [AnimationType.bounceIn]: null,
  [AnimationType.bounceInDown]: null,
  [AnimationType.bounceInLeft]: null,
  [AnimationType.bounceInright]: null,
  [AnimationType.bounceInUp]: null,
  [AnimationType.bounceOutDown]: null,
  [AnimationType.bounceOutLeft]: null,
  [AnimationType.bounceOutRight]: null,
  [AnimationType.bounceOutUp]: null,
  [AnimationType.fadeIn]: null,
  [AnimationType.fadeInDown]: null,
  [AnimationType.fadeInDownBig]: null,
  [AnimationType.fadeInLeft]: null,
  [AnimationType.fadeInLeftBig]: null,
  [AnimationType.fadeInRight]: null,
  [AnimationType.fadeInRightBig]: null,
  [AnimationType.fadeInUp]: null,
  [AnimationType.fadeInUpBig]: null,
  [AnimationType.fadeOut]: null,
  [AnimationType.fadeOutDown]: null,
  [AnimationType.fadeOutDownBig]: null,
  [AnimationType.fadeOutLeft]: null,
  [AnimationType.fadeOutLeftBig]: null,
  [AnimationType.fadeOutRight]: null,
  [AnimationType.fadeOutRightBig]: null,
  [AnimationType.fadeOutUp]: null,
  [AnimationType.fadeOutUpBig]: null,
  [AnimationType.flash]: null,
  [AnimationType.flip]: null,
  [AnimationType.flipInX]: null,
  [AnimationType.flipInY]: null,
  [AnimationType.flipOutX]: null,
  [AnimationType.flipOutY]: null,
  [AnimationType.headShake]: null,
  [AnimationType.hinge]: null,
  [AnimationType.jello]: null,
  [AnimationType.lightSpeedIn]: null,
  [AnimationType.lightSpeedOut]: null,
  [AnimationType.pulse]: null,
  [AnimationType.rollIn]: null,
  [AnimationType.rollOut]: null,
  [AnimationType.rotateIn]: null,
  [AnimationType.rotateInDownLeft]: null,
  [AnimationType.rotateInDownRight]: null,
  [AnimationType.rotateInUpLeft]: null,
  [AnimationType.rotateInUpRight]: null,
  [AnimationType.rotateOut]: null,
  [AnimationType.roateOutDownLeft]: null,
  [AnimationType.rotateOutDownRight]: null,
  [AnimationType.rotateOutUpLeft]: null,
  [AnimationType.rotateOutUpRight]: null,
  [AnimationType.rubberBand]: null,
  [AnimationType.shake]: null,
  [AnimationType.slideInDown]: null,
  [AnimationType.slideInLeft]: null,
  [AnimationType.slideInRight]: null,
  [AnimationType.slideInUp]: null,
  [AnimationType.slideOutDown]: null,
  [AnimationType.slideOutLeft]: null,
  [AnimationType.slideOutRight]: null,
  [AnimationType.slideOutUp]: null,
  [AnimationType.swing]: null,
  [AnimationType.tada]: null,
  [AnimationType.wobble]: null,
  [AnimationType.zoomIn]: null,
  [AnimationType.zoomInDown]: null,
  [AnimationType.zoomInLeft]: null,
  [AnimationType.zoomInRight]: null,
  [AnimationType.zoomInUp]: null,
  [AnimationType.zoomOut]: null,
  [AnimationType.zoomOutDown]: null,
  [AnimationType.zoomOutLeft]: null,
  [AnimationType.zoomOutRight]: null,
  [AnimationType.zoomOutUp]: null,
});

export const L3SComponentConfigBigV = t.type({
  type: t.literal("Big"),
  animationTypeIn: AnimationTypeV,
  animationTypeOut: AnimationTypeV,
  line1: t.string,
  line2: t.string,
  logo: t.string,
});
export type L3SComponentConfigBig = t.TypeOf<typeof L3SComponentConfigBigV>;

export const L3SComponentConfigSmallV = t.type({
  type: t.literal("Small"),
  animationTypeIn: AnimationTypeV,
  animationTypeOut: AnimationTypeV,
  line1: t.string,
  line2: t.string,
});
export type L3SComponentConfigSmall = t.TypeOf<typeof L3SComponentConfigSmallV>;

export const GridComponentDataV = t.union([
  L3SComponentConfigBigV,
  L3SComponentConfigSmallV,
]);
export type GridComponentData = t.TypeOf<typeof GridComponentDataV>;

export const GridComponentConfigV = t.type({
  compatibleWith: t.array(t.string),
  type: t.string,
  gridPosition: GridLayoutPositionV,
  data: GridComponentDataV,
});
export type GridComponentConfig = t.TypeOf<typeof GridComponentConfigV>;

export const GridLayoutConfigV = t.type({
  type: t.string,
});
export type GridLayoutConfig = t.TypeOf<typeof GridLayoutConfigV>;
